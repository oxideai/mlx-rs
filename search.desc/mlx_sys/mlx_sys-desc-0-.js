searchState.loadedDescShard("mlx_sys", 0, "No value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThrow an error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n\\defgroup ops Core array operations / /**@{\nAn N-dimensional array object.\nReturns a pointer to the array data, cast to <code>bfloat16_t*</code>. …\nReturns a pointer to the array data, cast to <code>bool*</code>. Array …\nReturns a pointer to the array data, cast to <code>_Complex*</code>. …\nReturns a pointer to the array data, cast to <code>float16_t*</code>. …\nReturns a pointer to the array data, cast to <code>float32*</code>. …\nReturns a pointer to the array data, cast to <code>int16_t*</code>. …\nReturns a pointer to the array data, cast to <code>int32_t*</code>. …\nReturns a pointer to the array data, cast to <code>int64_t*</code>. …\nReturns a pointer to the array data, cast to <code>int8_t*</code>. …\nReturns a pointer to the array data, cast to <code>uint16_t*</code>. …\nReturns a pointer to the array data, cast to <code>uint32_t*</code>. …\nReturns a pointer to the array data, cast to <code>uint64_t*</code>. …\nReturns a pointer to the array data, cast to <code>uint8_t*</code>. …\nThe shape of the array in a particular dimension.\nArray element type.\nArray element type.\nEvaluate the array.\nNew array from a bool scalar.\nNew array from a complex scalar.\nNew array from existing buffer. @param data A buffer which …\nNew array from a float scalar.\nNew array from a int scalar.\nThe array element type.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nAccess the value of a scalar array.\nThe size of the array’s datatype in bytes.\nThe number of bytes in the array.\nThe array’s dimension.\nThe shape of the array. Returns: a pointer to the sizes of …\nNumber of elements in the array.\nThe strides of the array.\n\\defgroup transforms Transform operations / /**@{\nA closure encapsulating a function taking a vector of …\nApplies the closure over the given vector of arrays …\nReturns a closure encapsulating the specified function.\nReturns a closure encapsulating the specified function. …\nReturns a closure encapsulating the specified function, …\nA closure which takes a vector of arrays, and returns a …\nApplies the closure over the given vector of arrays …\n\\defgroup compile Compilation operations / /**@{\nReturns the current default CPU stream.\nReturns the default MLX device.\nReturns the default stream on the given device.\n\\defgroup transforms_impl Implementation detail operations …\nA MLX device object.\nReturns the type of the device.\nReturns a new device of specified <code>type</code>, with specified …\nDevice type.\nDevice type.\n\\defgroup mlx_error Error management / /**@{\n\\defgroup fft FFT operations / /**@{\nDecreases the reference count of the object, and free if …\nA MLX future object (pointing to a void).\nReturns the current default GPU stream.\n\\defgroup linalg Linear algebra operations / /**@{\n\\defgroup io IO operations / /**@{\nA string-to-array map\nReturns the value indexed at the specified <code>key</code> in the map. …\nInsert a new <code>value</code> at the specified <code>key</code> in the map. …\nReturns a new iterator over the given map.\nAn iterator over a string-to-array map.\nReturns <code>true</code> iif iterator is at the end of the map.\nReturns the key associated to the current iterator …\nIncrement iterator. Returns <code>true</code> if iterator could …\nReturns the value associated to the current iterator …\nReturns a new empty string-to-array map.\nA string-to-string map\nReturns the value indexed at the specified <code>key</code> in the map. …\nInsert a new <code>value</code> at the specified <code>key</code> in the map. …\nReturns a new iterator over the given map.\nAn iterator over a string-to-string map.\nReturns <code>true</code> iif iterator is at the end of the map.\nReturns the key associated to the current iterator …\nIncrement iterator. Returns <code>true</code> if iterator could …\nReturns the value associated to the current iterator …\nReturns a new empty string-to-string map.\n\\defgroup metal Metal specific operations / /**@{\n\\defgroup random Random number operations / /**@{\nIncreases the reference count of the object.\nA MLX SafeTensors storage. Holds a string-to-array map …\nReturns the data map.\nReturns the metadata map.\nReturns a empty safetensors storage.\nSet the default MLX device.\nSet default stream.\nSet the error handler.\nA MLX stream object.\nCheck if streams are the same.\nReturn the device of the stream.\nReturns a new stream, with specified <code>index</code>, on a device.\nReturns a new stream on a device.\nA MLX string object.\nReturns a pointer to the string contents. The pointer is …\nReturns a new string, copying contents from <code>str</code>, which …\nSynchronize with the provided stream.\nReturns a new string representing the object.\nA vector of arrays.\nAdd an array to the vector of arrays. The reference count …\nAdd several arrays to the vector of arrays. The reference …\nReturns a new vector of array, containing a single …\nReturns a new vector of arrays, from specified arrays. The …\nGet the array at <code>index</code> in the vector of arrays.\nReturns a new empty vector of arrays\nSize of the vector of arrays.\nA vector of array vectors.\nAdd an array vector to the vector of array vectors. …\nGet the array vector at specified <code>index</code> in the vector of …\nGet the array at specified (<code>index</code>, <code>arr_index</code>) in the …\nNew empty vector of array vectors.")