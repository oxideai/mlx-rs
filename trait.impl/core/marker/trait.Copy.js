(function() {var implementors = {
"mlx_rs":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"mlx_rs/enum.DeviceType.html\" title=\"enum mlx_rs::DeviceType\">DeviceType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"mlx_rs/prelude/enum.Dtype.html\" title=\"enum mlx_rs::prelude::Dtype\">Dtype</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"mlx_rs/ops/indexing/struct.Ellipsis.html\" title=\"struct mlx_rs::ops::indexing::Ellipsis\">Ellipsis</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"mlx_rs/ops/indexing/struct.NewAxis.html\" title=\"struct mlx_rs::ops::indexing::NewAxis\">NewAxis</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"mlx_rs/linalg/enum.Ord.html\" title=\"enum mlx_rs::linalg::Ord\">Ord</a>&lt;'a&gt;"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"mlx_rs/random/enum.ShapeOrCount.html\" title=\"enum mlx_rs::random::ShapeOrCount\">ShapeOrCount</a>&lt;'a&gt;"],["impl&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"mlx_rs/ops/indexing/struct.StrideBy.html\" title=\"struct mlx_rs::ops::indexing::StrideBy\">StrideBy</a>&lt;I&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()